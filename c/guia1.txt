 PUNTO 1.
 1. main
/--------------------\
   x |0|
   
\--------------------/
-------------------------int x = 0

main
/--------------------\
   x |0|
   y |2|
\--------------------/
------------------------int y = 2

main
/--------------------\
   x |2|
   y |2|
\--------------------/
------------------------x = x+y

2. main
/--------------------\
   x |0|
   
\--------------------/
------------------------x = 0

main
/--------------------\
   x |0|
   y |0|   
\--------------------/
------------------------y = 0

main
/--------------------\
   x |0|
   y |1|   
\--------------------/
------------------------while(y<5) x+= y; y++;

main
/--------------------\
   x |1|
   y |2|   
\--------------------/
------------------------while(y<5) x+= y; y++;

main
/--------------------\
   x |3|
   y |3|   
\--------------------/
------------------------while(y<5) x+= y; y++;

main
/--------------------\
   x |6|
   y |4|   
\--------------------/
------------------------while(y<5) x+= y; y++;

main
/--------------------\
   x |10|
   y |5 |   
\--------------------/
------------------------while(y<5) x+= y; y++;

3.
main
/--------------------\
   y |0|
      
\--------------------/
------------------------y = 0;

main
/--------------------\
   y |0|
   b |true|   
\--------------------/
------------------------b = true;

main
/--------------------\
   y |1|
   b |false|   
\--------------------/
------------------------while(b) y++; b=!b;

PUNTO 2.

1. Proposito: 

PUNTO 3.
Par.cpp

PUNTO 4.
punto4.cpp

PUNTO 5.

struct Fraccion {
  int numerador;
  int denominador;
}

Fraccion consFraccion(int numerador, int denominador){
  Fraccion f;
  f.numerador = numerador;
  f.denominador = denominador;
  return f;
}

int numerador(Fraccion f){
   return f.numerador;
}

int denominador(Fraccion f){
  return f.denominador;
}

float division(Fraccion f){
  return f.numerador / f.denominador;
}

Fraccion multF(Fraccion f1, Fraccion f2){
  nu = f1.numerador * f2.numerador;
  de = f1.denominador * f2.denominador;
  return consFraccion(nu, de);
}

Fraccion simplificada(Fraccion f){
  int m = min(f.numerador, f.denominador);
  int nu = f.numerador;
  int de = f.denominador;
  for(i=m;i>1;i--){
    if(esDivisor(i,nu) && esDivisor(i,de){
      nu = nu/i;
      de = de/i;
      i = min(nu,de);
    }
  }
  return consFraccion(nu,de);
}

bool esDivisor(int n, int m){
  return m%n==0;
}

Fraccion sumF(Fraccion f1, Fraccion f2){
  nu = (f1.numerador * f2.denominador) + (f2.numerador * f1.denominador);
  de = f1.denominador * f2.denominador;
  return consFraccion(nu,de);
}  
